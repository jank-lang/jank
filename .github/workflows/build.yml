name: "Build"

on:
  pull_request:
  push:

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04]
        build_type: [Debug, Release]
        sanitize: [none, address, undefined, thread]
        exclude:
          - build_type: Release
            sanitize: address
          - build_type: Release
            sanitize: undefined
          - build_type: Release
            sanitize: thread
        include:
          - os: ubuntu-24.04
            build_type: Debug
            codecov: on
            analysis: on
            sanitize: none
    runs-on: ${{ matrix.os }}
    env:
      CODECOV: ${{ matrix.codecov }}
      ANALYSIS: ${{ matrix.analysis }}
      SANITIZE: ${{ matrix.sanitize }}
      ASAN_OPTIONS: detect_leaks=0
    timeout-minutes: 240 # 4h
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Build and test
        uses: ./.github/actions/build
        id: build
        with:
          update_release: ${{ github.ref == 'refs/heads/main' && github.event_name != 'pull_request' && matrix.build_type == 'Release' }}
      - name: Update latest release
        if: success() && ${{ github.ref == 'refs/heads/main' && github.event_name != 'pull_request' && matrix.build_type == 'Release' }}
        uses: pyTooling/Actions/releaser@main
        with:
          tag: latest
          rm: true
          token: ${{ secrets.GITHUB_TOKEN }}
          files: ${{ steps.build.outputs.release_archive }}
