(cpp/raw "namespace jank::cpp::constructor::complex::pass_template_base
          {
            template <typename T, typename V = std::vector<T>>
            struct baz
            {
              V vec;
            };

            template <typename T>
            struct bar : baz<T>
            {
              T *ptr{};
            };

            struct foo : bar<foo>
            {
              explicit foo(std::string const &v)
               : a{ v }
              { }

              std::string a{};
            };
          }")
(let* [arg (cpp/cast cpp/std.string "foo")
       f (cpp/jank.cpp.constructor.complex.pass_template_base.foo. arg)]
  (if (= "foo" (cpp/.-a f))
    :success))
