(cpp/raw "namespace jank::cpp::call::reference::pass_no_cast
          {
            struct foo
            { long l{ -1337 }; };

            long not_ref(long l)
            { return l; }
            long ref(long const &l)
            { return l; }
            long& ret_ref()
            {
              static long l{ 777 };
              return l;
            }
          }")
(let* [foo (cpp/jank.cpp.call.reference.pass_no_cast.foo.)
       l-ref (cpp/.-l foo)
       i (cpp/int. 5)

       ; Arg: ref, Param: not ref
       _ (assert (= l-ref (cpp/jank.cpp.call.reference.pass_no_cast.not_ref l-ref)))
       ; Arg: ref, Param: ref
       _ (assert (= l-ref (cpp/jank.cpp.call.reference.pass_no_cast.ref l-ref)))
       ; Arg: not ref, Param: not ref
       _ (assert (= i (cpp/jank.cpp.call.reference.pass_no_cast.not_ref i)))
       ; Arg: not ref, Param: ref
       _ (assert (= i (cpp/jank.cpp.call.reference.pass_no_cast.ref i)))
       ; Returning a ref
       _ (assert (= 777 (cpp/jank.cpp.call.reference.pass_no_cast.ret_ref)))]
  :success)
