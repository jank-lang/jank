; failure because keys in a single group must be unique
; test case in value position
(let [xfn
      (case 2
        (1 2 2) :one-or-two
        :default)]
  (assert (= xfn :one-or-two)))

; This will fail because keys in a group must be unique

; test case in statement position
(let [xfn (fn []
            (case 2
              (1 2 2) :one-or-two
              :default)
            :arbitrary-value)]
  (assert (= (xfn) :arbitrary-value)))

; This will fail because keys in a group must be unique

; test case in return position
(assert
  (=
    (case 2
      (1 2 2) :one-or-two
      :default)
    :one-or-two))

; This will fail because keys in a group must be unique
